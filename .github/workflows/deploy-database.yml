name: Deploy Calculator Database

on:
  push:
    branches: [ main, database-demo ]
    paths: [ 'database/**' ]
  pull_request:
    branches: [ main ]
    paths: [ 'database/**' ]

env:
  SQL_SERVER_NAME: calculator-sql-server
  SQL_DATABASE_NAME: calculator-db

jobs:
  validate-database:
    runs-on: ubuntu-latest
    name: 🔍 Validate Database Schema
    
    steps:
    - name: 📥 Checkout Code
      uses: actions/checkout@v4
      
    - name: 🔍 Validate SQL Project Structure
      run: |
        echo "🔍 Validating database project structure..."
        
        # Check if required files exist
        if [ ! -f "database/Calculator.sqlproj" ]; then
          echo "❌ Calculator.sqlproj not found"
          exit 1
        fi
        
        if [ ! -f "database/Tables/Users.sql" ]; then
          echo "❌ Users.sql not found"
          exit 1
        fi
        
        if [ ! -f "database/Tables/Calculations.sql" ]; then
          echo "❌ Calculations.sql not found"  
          exit 1
        fi
        
        echo "✅ Database project structure is valid"

  deploy-to-staging:
    needs: validate-database
    if: github.ref == 'refs/heads/database-demo'
    runs-on: ubuntu-latest
    name: 🚀 Deploy to Staging Database
    
    steps:
    - name: 📥 Checkout Code
      uses: actions/checkout@v4
      
    - name: 🔑 Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: 🗄️ Deploy Database Schema to Staging
      uses: azure/sql-action@v2.3
      with:        
        connection-string: ${{ secrets.AZURE_SQL_STAGING_CONNECTION_STRING }}
        path: './database/Calculator.sqlproj'
        action: 'publish'
        arguments: '/p:DropObjectsNotInSource=false /p:BlockOnPossibleDataLoss=true'
        
    - name: 🧪 Run Database Tests on Staging
      run: echo "✅ Database deployment to staging completed successfully"

  deploy-to-production:
    needs: validate-database
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    name: 🏭 Deploy to Production Database
    environment: production
    
    steps:
    - name: 📥 Checkout Code
      uses: actions/checkout@v4
      
    - name: 🔑 Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: 💾 Backup Production Database
      run: |
        echo "💾 Creating backup of production database..."
        BACKUP_NAME="calculator-db-backup-$(date +%Y%m%d-%H%M%S)"
        
        az sql db export \
          --server ${{ env.SQL_SERVER_NAME }} \
          --name ${{ env.SQL_DATABASE_NAME }} \
          --admin-user ${{ secrets.SQL_ADMIN_USER }} \
          --admin-password ${{ secrets.SQL_ADMIN_PASSWORD }} \
          --storage-key ${{ secrets.STORAGE_ACCOUNT_KEY }} \
          --storage-key-type StorageAccessKey \
          --storage-uri "https://${{ secrets.STORAGE_ACCOUNT_NAME }}.blob.core.windows.net/backups/${BACKUP_NAME}.bacpac" || true
        
        echo "✅ Backup completed: ${BACKUP_NAME}.bacpac"
    
    - name: 🗄️ Deploy Database Schema to Production
      uses: azure/sql-action@v2.3
      with:        
        connection-string: ${{ secrets.AZURE_SQL_PRODUCTION_CONNECTION_STRING }}
        path: './database/Calculator.sqlproj'
        action: 'publish'
        arguments: '/p:DropObjectsNotInSource=false /p:BlockOnPossibleDataLoss=true'
        
    - name: ✅ Verify Production Deployment
      uses: azure/sql-action@v2.3
      with:        
        connection-string: ${{ secrets.AZURE_SQL_PRODUCTION_CONNECTION_STRING }}
        path: |
          SELECT 
            COUNT(*) as TableCount,
            'Database deployment verified' as Status
          FROM INFORMATION_SCHEMA.TABLES 
          WHERE TABLE_SCHEMA = 'dbo' 
          AND TABLE_NAME IN ('Users', 'Calculations')
          
    - name: 📊 Deployment Summary
      run: |
        echo "========================================"
        echo "🎯 DATABASE DEPLOYMENT COMPLETED"
        echo "========================================"
        echo "📦 Database: ${{ env.SQL_DATABASE_NAME }}"
        echo "🖥️ Server: ${{ env.SQL_SERVER_NAME }}"
        echo "🌿 Branch: ${{ github.ref_name }}"
        echo "👤 Author: ${{ github.actor }}"
        echo "📅 Time: $(date)"
        echo "✅ Ready for application deployment!"
        echo "========================================"